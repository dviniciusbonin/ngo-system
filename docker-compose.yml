services:
  npm:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - .:/app
    entrypoint: npm
    depends_on:
      - db

  api-dev:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - '${PORT}:${PORT}'
      - '5555:5555' # Prisma studio
    env_file:
      - .env
    command: >
      sh -c "
        if [ ! -d 'node_modules' ]; then
          npm ci
        fi &&
        npx prisma generate &&
        npm run start:dev
      "
    depends_on:
      - db

  api-prod:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER}']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
